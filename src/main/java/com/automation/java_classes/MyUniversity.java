package com.automation.java_classes;

/*
Main Task
Для выполнения достаточно выбрать одно задание.
Создать классы, спецификации которых приведены ниже. Определить конструкторы и методы setТип(), getТип(), toString(). Определить дополнительно методы в классе, создающем массив объектов. Задать критерий выбора данных и вывести эти данные на консоль. В каждом классе, обладающем информацией, должно быть объявлено несколько конструкторов.
1. Student: id, Фамилия, Имя, Отчество, Дата рождения, Адрес, Телефон, Факультет, Курс, Группа.
Создать массив объектов. Вывести:
a) список студентов заданного факультета;
b) списки студентов для каждого факультета и курса;
c) список студентов, родившихся после заданного года;
d) список учебной группы.
 */


public class MyUniversity {
    public static void main(String[] args) {
        University mgu = new University("Mgu");
        mgu.addStudentToUniversityList(new Student(1, "Иван", "Иванович", "Иванов", 1999, "Минск", "12345", "Юридический", "3", "04Пр"));
        mgu.addStudentToUniversityList(new Student(2, "Андрей", "Семенович", "Полозов", 2001, "Полоцк", "23456", "Строительный", "1", "06Ст"));
        mgu.addStudentToUniversityList(new Student(3, "Савва", "Самуилович", "Кац", 1998, "Витебск", "78999", "Юридический", "3", "04Пр"));
        mgu.addStudentToUniversityList(new Student(4, "Светлана", "Ивановна", "Непоседова", 1997, "Молодечно", "89897", "Юридический", "3", "04Пр"));
        mgu.addStudentToUniversityList(new Student(5, "Игорь", "Степанович", "Конь", 2000, "Слуцк", "78997", "Строительный", "2", "05Ст"));
        mgu.addStudentToUniversityList(new Student(6, "Бенджамин", "Франклинович", "Стоун", 2002, "Заславль", "67897", "Юридический", "2", "05Пр"));
        mgu.addStudentToUniversityList(new Student(7, "Антон", "Иосифович", "Луцевич", 1999, "Минск", "89653", "Юридический", "2", "05Пр"));
        mgu.addStudentToUniversityList(new Student(8, "Василий", "Васильевич", "Морозов", 1998, "Витебск", "34721", "Строительный", "3", "04Ст"));
        mgu.addStudentToUniversityList(new Student(9, "Ольга", "Олеговна", "Чернявская", 2003, "Орша", "67834", "Юридический", "1", "06Пр"));
        mgu.addStudentToUniversityList(new Student(10, "Наталья", "Антоновна", "Стома", 1996, "Новополоцк", "98345", "Строительный", "2", "05Ст"));
        mgu.addStudentToUniversityList(new Student(11, "Карина", "Михайловна", "Пушистая", 2001, "Минск", "89221", "Юридический", "3", "04Пр"));
        mgu.addStudentToUniversityList(new Student(12, "Алеся", "Михайловна", "Лясович", 1982, "Новополоцк", "34567", "Строительный", "1", "06Ст"));


        mgu.selectionToFaculty("Строительный");//список студентов заданного факультета
        mgu.selectionToFacultyAndToCourse("Строительный", "3");//списки студентов для каждого факультета и курса;
        mgu.selectionToYard(1982);//список студентов, родившихся после заданного года;
        mgu.selectionToGroup("05Пр");//список студентов заданной группы


    }
}
